Xcode, In a Nutshell
====================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   tutorials@c4ios.com

image::xcode/xcode.png["Xcode"]

In this tutorial, we'll orient you to Xcode, Apple's Integrated Development Environment (IDE)... This will be only a brief introduction to the application with a focus on the more important parts that you'll use when working with C4.


Xcode App
---------
The link:https://developer.apple.com/xcode/[Xcode] app is the program you need to use in order to develop for iOS and Mac. It is called an IDE because it packages a lot of useful components, softwares and resources in a single application. There is an extraordinary amount of things that Xcode can do, as described on its main page:

[quote, Apple, developer.apple.com/xcode/]
Xcode is Apple's powerful integrated development environment for creating great apps for Mac, iPhone, and iPad. Xcode includes the Instruments analysis tool, iOS Simulator, and the latest Mac OS X and iOS SDKs.

A full orientation to Xcode takes more than just reading, it takes practice. But, you can get up and running easily enough without having to worry about all the details of the application. 

Here, we'll show you 5 things you will need to know about Xcode and why you need to know them when you develop with C4.

- The 4 Areas of Xcode
- How to Build & Run
- Debugging
- Documentation
- Setup Tricks

The 4 Areas of Xcode
--------------------
The Xcode app is broken up into 4 main areas.

image::xcode/xcode4Areas.png["4 Main Areas of Xcode"]

Editor Area
~~~~~~~~~~~
This is the space where you will _write code_.

If you can't see the editor then you can click on any *.m* or *.h* file in the navigator.

Navigator Area
~~~~~~~~~~~~~~
This is where you can look and navigate through your entire project's structure. Here, you can add, delete, rename and preview files. 

If you can't see the navigator then you can click on the leftmost view button at the top-left of Xcode window.

image::xcode/viewButtonNavigator.png["The Navigator View Button"]

Debug Area
~~~~~~~~~~
You'll most likely be using the console in this area... The console is the place where your application will write notifications, crashes, and other things that you might slip into your code using the +C4Log()+ function.

If you can't see the console then you can click on the middle view button at the top-left of Xcode window.

image::xcode/viewButtonConsole.png["The Console View Button"]

Utility Area
~~~~~~~~~~~~
The panel on the left side of the Xcode window is where you'll find a lot of helpful links, advice and even some drag / drop options. The purpose of this panel it to provide you with useful help for developing applications.

If you can't see the utilities then you can click on the rightmost view button at the top-left of Xcode window.

image::xcode/viewButtonUtility.png["The Utility View Button"]

How To Build & Run
------------------
The main thing you'll be doing is compiling your code and running it, either on a device or in the iOS Simulator. 

The Run Button
~~~~~~~~~~~~~~
This is the easiest way to build an application and launch it... So, when you've got some code that you want to test, all you have to do is hit the run button at the top-left of the xcode window.

image::xcode/run.png["The Run Button"]

Schemes
~~~~~~~
When Xcode compiles it uses something called a Scheme to determine _how it will compile_ your application. In general, you can think of a scheme as *a configuration to use when building*. Rarely will you need to change or update schemes, which is nice because they can get complicated.

The scheme area of Xcode looks like this:

image::xcode/schemeButton.png["The Schemes Button"]

For the most part you'll only ever need to switch between *iOS Simulator* and *iOS Device*. If you have an iOS device plugged into your computer, you can change the current scheme to build and deploy straight to the device.

You simply _click on the right side of the scheme button_ and select the device.

image::xcode/changeScheme.png["Changing the Scheme"]

Debugging
---------
There is a lot to learn when it comes to debugging, but one of the most handy tricks to know is how to use the *console*. We won't get into a full explanation of debugging, but we will show you where the console is and how to print out to it...

Console
~~~~~~~
The debug console is a window that receives notifications and messages from the current running application and is a place where you can read what is going on inside the app.

image::xcode/debugConsole.png["The Debug Console"]

C4Log()
~~~~~~~
Get to know this simple function! +C4Log()+ will allow you to print messages to the console at any time in your application. You can place calls to +C4Log()+ inside methods and functions to help you figure out what is happening, when, and what the value of a variable might be at any given time.

You'll see some references to +C4Log()+ throughout the tutorials and examples, so keep an eye out...

For now, we used the following call to +C4Log()+ to produce the message in the image above:

[source]
----
C4Log(@"This is the Debug Console");
----

Documentation
-------------
Xcode has a really nice integration with all sorts of documentation, including Objective-C, Carbon, C, and much much more. We have also figured out how to integrate C4 documentation into Xcode, it gets installed when you run the C4 installer.

The Organizer
~~~~~~~~~~~~~
You can use the documentation organizer to locate and use documentation resources that come with Xcode, and to access C4 documentation. The documentation organizer is a full-featured viewer that manages documentation sets (also known as doc sets), to provide integrated searching and viewing of developer documentation. The organizer comprises a navigator area and a content area.

image::xcode/organizer.png["The Documentation Organizer", height=400]

You can launch the Organizer by pressing on the button at the top-right of the Xcode window.

image::xcode/organizerButton.png["The Organizer Button"]

Two of the most useful ways of navigating with documentation are the _browse_ and _search_ modes, both of which can be accessed on the left-hand side of the organizer window.

When you click on the little eye icon, a list of available documentation sets pops up. In the image below we've clicked on the C4 docset and scrolled down the _classes_ section to see a list of available classes.

image::xcode/organizerBrowse.png["Organizer Browse Mode", height=400]

The second, and probably most useful way to navigate code is to use the search function. In the image below we've clicked on the little search icon and entered *NSObject* as the search term. As you can see, a list of various kinds of documentation resources appears, including: reference, guides and sample code.

image::xcode/organizerSearch.png["Organizer Search Mode", height=400]

Option-Click
~~~~~~~~~~~~
Instead of always going to the organizer, you can get a quick view of the documentation for a given method, class or object. Selecting the object and then +*option-clicking*+, or +*right-clicking*+, causes a small popover window to appear with documentation specific for that particular method, class or object.

image::xcode/optionClick.png["Quick View of Documentation"]

Setup Tricks
------------
There are two tricks for setting up Xcode that can be quite useful. One is to learn how to change the color settings, and the other is to set the console to appear when a project is run.

Color Settings
~~~~~~~~~~~~~~
You can change the color settings of Xcode by opening up its *preferences* pane and selecting the *Fonts & Colors* tab. You'll find that there are a few preinstalled color schemes. 

image::xcode/colorSettings.png["Setting the Color Theme", height=400]

The one being used in the image above is called Solarized. You can download the theme from:

- link:http://ethanschoonover.com/solarized[Solarized, by Ethan Schoonover]

...and then copy the +.dvtcolortheme+ files into the following address on your computer:

+*~/Library/Developer/Xcode/UserData/FontAndColorThemes*+

Automatic Console
~~~~~~~~~~~~~~~~~
Its a good idea to have the console open up every time an application is run, because you always want to see the messages that might appear while your app is running. This saves you from having to open the console yourself each time you hit the run button...

To set this option, navigate to the *Behaviors* tab in the preferences pane and then select the *Build Starts* option on the left-hand side of the window. Then, on the right-hand side, check the *Show debugger with Console View* option.

image::xcode/consoleSettings.png["Setting the Console Options", height=400]

User Guide
----------
The Xcode 4 User Guide is BORING! But, there's all kinds of useful information in it...

- link:https://developer.apple.com/library/ios/#documentation/ToolsLanguages/Conceptual/Xcode4UserGuide/000-About_Xcode/about.html#//apple_ref/doc/uid/TP40010215[Xcode User Guide]