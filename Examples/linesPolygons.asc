C4Shape: Lines & Polygons
=========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3170776

You create a line, triangle or polygon by first creating a set of points as a *CGPoint* array. Depending on the type of shape you're making, you'll pass 2 (for lines), 3 (for triangles) or any number of points (for polygons).

image::linesPolygons/linesPolygons.png["Lines, Triangles and Polygons",height=500]

Lines
-----
To define a line, you create an array of 2 points like this:

[source]
----
CGPoint points[2] = {CGPointMake(x,y),CGPointMake(x,y)};
C4Shape *line = [C4Shape line:points];
----

.Why CGPoint?
[NOTE]
In any programming language you will need to use some kind of data structure for dealing with coordinates. In C4, we use CGPoint structures to define on-screen coordinates instead of having, say, an array of x and y values, because it keeps consistent with the way that native iOS programming works... In the end, if you need to move from C4 to real Objective-C we hope you'll be able to do so more easily.

In Practice
~~~~~~~~~~~
To create line starting at (100,100) and ending at (300,300), you do the following:
[source]
----
CGPoint points[2] = {CGPointMake(100,100),CGPointMake(300,300)};
C4Shape *line = [C4Shape line:points];
----

Triangles
---------
To define a triangle, you create an object like this:

[source]
----
CGPoint points[3] = {CGPointMake(x,y),CGPointMake(x,y),CGPointMake(x,y)};
C4Shape *triangle = [C4Shape triangle:points];
----

Creating a triangle is just like creating a line, except you use 3 points.

In Practice
~~~~~~~~~~~
To create triangle starting at (100,100), with a width of 200, and a height of 200 you do the following:

[source]
----
CGPoint points[3] = {
    CGPointMake(100,100),
    CGPointMake(300,300),
    CGPointMake(100,300)
};
    
C4Shape *triangle = [C4Shape triangle:points];
----

Polygons
--------
To define a polygon, you create an object like this:

[source]
----
CGPoint points[n] = {CGPointMake(x,y),...,CGPointMake(x,y)};
C4Shape *polygon = [C4Shape polygon:points pointCount:n];
----

Creating a polygon differs only slightly from lines and triangles in that you is just like creating a line, except you use 3 points.

In Practice
~~~~~~~~~~~
To create polygon you might do the following:

[source]
----
CGPoint points[4] = {
    CGPointMake(100,100),
    CGPointMake(300,300),
    CGPointMake(100,300),
    CGPointMake(300,100)
};

C4Shape *p = [C4Shape polygon:points pointCount:4];
----
