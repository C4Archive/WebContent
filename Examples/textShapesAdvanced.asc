C4Shape: Text Shapes
====================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3183355

You can create shapes that look like text by using a font and a string. This example combines creating a text shape and animating a line dash pattern around its edge, like link:lineDashPhase2.php[this example].

image::textShapesAdvanced/textShapesAdvanced.png["Text Shapes Advanced",height=500]

The Shapes
----------
The text shape is contained within a square, so we first set up this shape with its own dash pattern and style. We then create the text shape and style it as well. When we're ready, we animate the both of them...

The Square
~~~~~~~~~~
Setting up the square is fairly straightforward. We align it to the center of the screen, clear its fill color, and add a dash pattern. The line is given a CAPROUND style, which adds rounded ends to all the dashes.

[source]
----
rect = [C4Shape rect:CGRectMake(0, 0, 200, 200)];
rect.center = self.canvas.center;

patternWidth = 4*rect.width;
CGFloat dashPattern[2] = {5,20};

//thicken the line and set its dash pattern
rect.lineWidth = 10.0f;
rect.fillColor = [UIColor clearColor];
rect.lineCap = CAPROUND;
[rect setDashPattern:dashPattern pointCount:2];

//add the line to the canvas
[self.canvas addShape:rect];
----

The Text Shape
~~~~~~~~~~~~~~
We create the text shape using the +*ArialRoundedMTBold*+ font, and take the same steps to center it, style it and set its dash pattern. 

[source]
----
//create a font for the text shape
C4Font *f = [C4Font fontWithName:@"ArialRoundedMTBold" size:320];

//create the text shape and center it
star = [C4Shape shapeFromString:@"*" withFont:f];
star.center = self.canvas.center;

//style the text shape and set its dash pattern
star.fillColor = [UIColor clearColor];
star.lineWidth = 5.0f;
star.lineCap = CAPROUND;
[star setDashPattern:dashPattern pointCount:2];
----

Animating the Shapes
~~~~~~~~~~~~~~~~~~~~
When we're ready to animate we call the following method:

[source]
----
-(void)animate {
    rect.animationDuration = 10.0f;
    rect.animationOptions = AUTOREVERSE | REPEAT;
    rect.strokeColor = C4BLUE;
    
    star.animationDuration = 10.0f;
    star.animationOptions = AUTOREVERSE | REPEAT;
    star.strokeColor = C4GREY;
    
    //set the final dash phase to the entire width of the pattern
    rect.lineDashPhase = patternWidth;
    star.lineDashPhase = patternWidth;
}
----

The above creates a 10-second repeating animation (in both directions) that animates the dash phase and color of the lines for each shape.