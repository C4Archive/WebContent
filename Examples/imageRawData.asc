Image: Raw Data
===============
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3232951

You can create images from scratch by using an array of raw data values.

image::imageRawData/imageRawData.png["Image With Raw Data",height=500]

Image With Raw Data
-------------------
Creating an image from raw data (i.e. char values), takes a bit of setup. You need to first create an array to hold the color values you'll use to make the image, which takes some calculating and mallocing and so on...

Create a Raw Array
~~~~~~~~~~~~~~~~~~
The raw array you will use needs to be large enough to hold all the pixels for the image you're creating. Typically, you use 4 different values for 1 color which means that you need 4 *bytes* for every pixel. 

We will create a 320x240 image, with 4 bytes per pixel (RGBA), so we need to first build an array big enough to hold all the data. Finally, because we're doing this from scratch, we'll have to *malloc* the array.

[source]
----
NSInteger width = 320;
NSInteger height = 240;
NSInteger bytesPerPixel = 4;
NSInteger bytesPerRow = width * bytesPerPixel;
unsigned char *rawData = malloc(height * bytesPerRow);
----

Fill the Array 
~~~~~~~~~~~~~~
We fill the array by moving through each pixel, filling some with color, and leaving others empty. This example fills all the pixels in every other line in the image with the C4GREY color (i.e. 50,55,60,255).

[source]
----
for(int y = 0; y < height; y+=2) {
    for(int x = 0; x < width * bytesPerPixel; x+=4) {
        int currentPosition = x + y * bytesPerRow;
        rawData[currentPosition] = 50;
        rawData[currentPosition + 1] = 55;
        rawData[currentPosition + 2] = 60;
        rawData[currentPosition + 3] = 255;
    }
}
----

Create the Image
----------------
We can now use the raw data array to create a C4Image.

[source]
----
C4Image *img = [[C4Image alloc] initWithRawData:rawData width:width height:height];
----