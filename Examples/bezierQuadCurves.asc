Bezier & Quadratic Curves
=========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3172270

Creating bezier and quadratic curves is similar to one another, differing only in that there are 2 control points for beziers and only 1 for quadratics.

image::bezierQuadCurves/bezierQuadCurves.png["Bezier and Quadratic Curves",height=500]

Bezier Curves
-------------
To define a bezier curve you pass 2 sets of points, almost like creating a link:/linesPolygons.php[line], one for the end points of the line and the other the _control_ points that define the shape of the curve.

[source]
----
CGPoint endPoints[2] = {..,..}
CGPoint controlPoints[2] = {..,..};

C4Shape *bezier = [C4Shape curve:endPoints controlPoints:controlPoints];
----

In Practice
~~~~~~~~~~~
To create a bezier curve from {100,200} to {300,200} with control points that make it look like a sine wave, you could do the following:

[source]
----
CGPoint endPoints[2] = {CGPointMake(100, 200),CGPointMake(300, 200)};
CGPoint controlPoints[2] = {CGPointMake(200, 0),CGPointMake(200, 400)};

C4Shape *bezier = [C4Shape curve:endPoints controlPoints:controlPoints];
----

Quadratic Curves
----------------
Quadratic curves use only 1 control point, but are still created in almost the same way as beziers. A single *CGPoint* is passed as a control for the shape of the curve.

[source]
----
CGPoint endPoints[2] = {...,...};
CGPoint controlPoint = CGPointMake(x,y);

C4Shape *bezier = [C4Shape curve:endPoints controlPoints:controlPoints];
----

In Practice
~~~~~~~~~~~
To create a quadratic curve from {100,200} to {300,200} with a control point that makes the shape curve upwards, you could do the following:

[source]
----
CGPoint endPoints[2] = {CGPointMake(100, 200),CGPointMake(300, 200)};
CGPoint controlPoint = CGPointMake(200, 0);

C4Shape *quadratic = [C4Shape quadCurve:endPoints controlPoint:controlPoint];
----