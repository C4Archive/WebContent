Font: Font and Family Names
===========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3230838

Every font in a family has a specific name. For instance, an italic font will have a different name than a bold font. This example builds off of the link:fontFamilyLabels.php[previous font example].

image::fontAndFamilyLabels/fontAndFamilyLabels.png["Font and Family Names",height=500]

.iosfonts.com
[NOTE]
link:www.iosfonts.com[iOS Fonts] has a complete list of fonts for iOS, and shows their availability (i.e. iOS 4.3, 5.0, 6.0, etc...)

Family Name Array
-----------------
The first step to printing out the font family names available in the current version of iOS that you're working with, is to grab an array of all font families.

[source]
----
NSArray *familyNames = [C4Font familyNames];
----

Create Labels
-------------
All the names in the array are actually *NSString* objects, which means we can easily use them to create labels. A simple *for* loop will help us here.


A Shifting Origin
~~~~~~~~~~~~~~~~~
First, we create a *CGPoint* which we will use to set the origin for every label...

[source]
----
CGPoint point = CGPointMake(10, 10);
----

A Tricky Loop
~~~~~~~~~~~~~
We create an outer loop that cycles through all the font families and then each one of their font names...

[source]
----
for(NSString *familyName in familyNamesArray) {
    NSArray *fontNames = [C4Font fontNamesForFamilyName:familyName];
    //The nested loop goes here
}
----

The Nested Loop
~~~~~~~~~~~~~~~
The nested loop does most of the work, just like the link:fontFamilyLabels.php[previous example] this one creates a label for each font name in a family and puts it up on the screen.

[source]
----
for(NSString *fontName in fontNames) {
    C4Font *f = [C4Font fontWithName:fontName size:14.0f];
    C4Label *l = [C4Label labelWithText:fontName font:f];
    l.origin = point;
    point.y += l.height;
    if (point.y > self.canvas.height) {
        point.x += self.canvas.width / 3;
        point.y = 10;
    }
    [self.canvas addLabel:l];
}
----

Putting It All Together
-----------------------
The entire loop looks like this:

[source]
----
NSArray *familyNamesArray = [C4Font familyNames];

CGPoint point = CGPointMake(10, 10);

for(NSString *familyName in familyNamesArray) {
    NSArray *fontNames = [C4Font fontNamesForFamilyName:familyName];
    for(NSString *fontName in fontNames) {
        C4Font *f = [C4Font fontWithName:fontName size:14.0f];
        C4Label *l = [C4Label labelWithText:fontName font:f];
        l.origin = point;
        point.y += l.height;
        if (point.y > self.canvas.height) {
            point.x += self.canvas.width / 3;
            point.y = 10;
        }
        [self.canvas addLabel:l];
    }
}
----