Timer: Automatic
================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3244735
:vimeo: 48991033

You can use a C4Timer to trigger methods are regular intervals. This is especially handy for animations.

C4Timer
-------
The C4Timer class creates timer objects that fire and can trigger methods at regular intervals. A timer waits until a certain time interval has elapsed and then fires, sending a specified message to a target object. For example, you could create a C4Timer object that sends a message to a shape, telling it to update its dimensions.

Class Variables
~~~~~~~~~~~~~~~
It's important to remember that C4Timer objects need to be defined as class variables... If they are defined in setup, for instance, they will be lost when the setup method finishes. 

The following is how you might define a timer for your application's main workspace.

[source]
----
@implementation C4WorkSpace {
    C4Timer *timer;
}
----

An Automatic Timer
~~~~~~~~~~~~~~~~~~
Automatic timers start firing as soon as they are created and your app launches. To create an automatic timer, do the following:

[source]
----
timer = [automaticTimerWithInterval:0.25f target:self method:@"update" repeats:YES];
----

This example shows 3 main things about automatic timers:

- *interval*: the amount of time, in seconds, between calls to the method
- *target*: the object to which the method call will be made
- *method*: the name of the method to call
- *repeats*: a boolean value that determines whether or not the timer repeats itself

Update
~~~~~~
The code above will call the +update+ method from the workspace. Inside the method you can do a bunch of stuff that will be run every quarter of a second.

[source]
----
-(void)update {
    //stuff to be run every time the timer fires
}
----