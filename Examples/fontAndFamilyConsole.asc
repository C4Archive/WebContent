Font: Font and Family Names
===========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3230625

Every font in a family has a specific name. For instance, an italic font will have a different name than a bold font. This example builds off of the link:fontFamilyConsole.php[previous font example].

image::fontAndFamilyConsole/fontAndFamilyConsole.png["Font and Family Names",height=500]

.iosfonts.com
[NOTE]
link:www.iosfonts.com[iOS Fonts] has a complete list of fonts for iOS, and shows their availability (i.e. iOS 4.3, 5.0, 6.0, etc...)

Family Name Array
-----------------
The first step to printing out the font family names available in the current version of iOS that you're working with, is to grab an array of all font families.

[source]
----
NSArray *familyNames = [C4Font familyNames];
----

Family Names
------------
All the names in the array are actually *NSString* objects, which means we can easily print them to the console. A simple *for* loop will help us here.

[source]
----
for(NSString *currentFamilyName in familyNames) {
    C4Log(currentFamilyName);
    //... the nested loop will go here
}
----

This loop will go through all the string values in the given array and log each one to the console.

Font Names
----------
For each family name we will create an array of *font* names to print out. The technique for printing this out is the same as above, the only difference being that this loop exists *inside* the other... this makes it a _nested_ loop.

[source]
----
NSArray *fontNames = [C4Font fontNamesForFamilyName:currentFamilyName];
for(NSString *currentFontName in fontNames) {
    C4Log(@"  %@",currentFontName);
}
----

Putting It All Together
-----------------------
The entire nested loop looks like this...

[source]
----
NSArray *familyNames = [C4Font familyNames];

for(NSString *currentFamilyName in familyNames) {
    C4Log(currentFamilyName);
    NSArray *fontNames = [C4Font fontNamesForFamilyName:currentFamilyName];
    for(NSString *currentFontName in fontNames) {
        C4Log(@"  %@",currentFontName);
    }
}
----