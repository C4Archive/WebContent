C4Shape: Stroke Start / End
===========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3177399

In this example we create lines from the top to the bottom of the canvas. Then, we use the _strokeStart_ and _strokeEnd_ points to style them into a pyramid.

image::strokeStartEndAdvanced/strokeStartEndAdvanced.png["Advanced Stroke Start & End",height=500]

Create the Variables
--------------------
There are a couple steps to creating this example, first we create 3 variables: 
1. An array of *CGPoint* structs to use as the end points for all the lines, a total line count based on each 
2. A total line count, based on each line being 5.0 pts thick + 1.0 pt gap between lines (i.e. 6.0f)
3. A displacement value for each line to be used to calculate its stroke start / end points

[source]
----
CGPoint linePoints[2] = {CGPointZero,CGPointMake(self.canvas.width,0.0f)};
CGFloat totalLineCount = self.canvas.height / 6.0f;
CGFloat strokeDisplacement = 0.5f / totalLineCount;
----

Create the Lines
----------------
Next, we create the lines by running a loop that cycles through all the lines, styling and adding them to the canvas as it goes.

[source]
----
for(int i = 0; i < totalLineCount; i++) {
    //set the end points for the current line
    //notice we only change the y value of the lines, moving them horizontally downwards
    linePoints[0].y = i*6.0f + 2.5f;
    linePoints[1].y = linePoints[0].y;
    
    //create a new line
    C4Shape *newLine = [C4Shape line:linePoints];
    
    //determine the current displacement of the ends of the line
    CGFloat currentDisplacement = strokeDisplacement*(i+1);
    newLine.strokeStart = 0.5 - currentDisplacement;
    newLine.strokeEnd = 0.5f + currentDisplacement;
    
    //... and add it to the canvas
    [self.canvas addShape:newLine];
}
----

TIP: Remember that you can animate all the _strokeStart_ and _strokeEnd_ points in this example...