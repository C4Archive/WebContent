C4Shape: Line Width (Advanced)
==============================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3177319

This example goes through the steps of creating a set of lines with increasing widths, each offset from one another by a little gap.

image::lineWidthAdvanced/lineWidthAdvanced.png["Line Width (Advanced)",height=500]

2 x-coordinates
---------------
Each line will move across the canvas, leaving a little gap at each end, so we create 2 values that specify how far along the x-axis each point will be.

[source]
----
CGFloat x1 = self.canvas.width*0.01f;
CGFloat x2 = self.canvas.width-x1;
----

.Re-using a variable
[NOTE]
We create +x1+ and +x2+ variables because it's easier to understand, and much cleaner in terms of coding. Instead of copying and pasting the value +self.canvas.width*0.01f+ each time we create a starting point for our line, we only need to specify it once and reuse the variable +x1+. 

The Points Array
----------------
Just like creating 2 variables to reuse, we create an array of points which will be reused to define each line. After  each line we will update the points so that the array can be used for the next line.

Here we create and populate the line points array with 2 end points that will be used for the first line.

[source]
----
CGPoint linePoints[2] = {CGPointMake(x1, 75),CGPointMake(x2, 75)};
----

The lines
---------
Now that we have all our arrays and variables, we can create the lines for this example.

Create the first line
~~~~~~~~~~~~~~~~~~~~~
We start by creating the first line and adding it to the canvas...

[source]
----
C4Shape *line = [C4Shape line:linePoints];
[self.canvas addShape:line];
----

Shift the line points
~~~~~~~~~~~~~~~~~~~~~
After creating the first line, we shift the line points down a bit to the starting point for the beginning of the cascading lines.

[source]
----
linePoints[0].y *= 2;
linePoints[1].y *= 2;
----

.Only Y!
[NOTE]
See how we only adjust the y coordinate of the points? This will change the vertical position of the next line. We will do this for the rest of the lines, all the way to the bottom of the screen.

Loop the rest
~~~~~~~~~~~~~
We want to make a line, then make another one slightly bigger and shifted down a bit, and continue to do this all the way to the bottom. We will use a for-loop to get the job done.

The loop will do the following:

1. Calculate the width of the current line
2. Change the y coordinates of the line point array (based on the width)
3. Create a new line and add it to the canvas

[source]
----
for(int i = 0; linePoints[0].y < self.canvas.height; i++) {
    CGFloat currentLineWidth = 2.0f + [C4Math pow:1.15f raisedTo:i];

    linePoints[0].y += currentLineWidth+1.0f;
    linePoints[1].y += currentLineWidth+1.0f;
    
    C4Shape *newLine = [C4Shape line:linePoints];
    newLine.lineWidth = currentLineWidth;
    [self.canvas addShape:newLine];
}
----

