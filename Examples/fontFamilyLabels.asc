Font: Family Name Labels
========================
Travis Kirton
:toc:
:theme: 	c4tutorial
:source-highlighter: pygments
:language: 	objective-c
:icons:
:numbered:
:email:   examples@c4ios.com
:code: https://gist.github.com/3230838

We can create a label for each font family name and add this to the canvas of our application.

image::fontFamilyLabels/fontFamilyLabels.png["Font Family Labels",height=500]

.Online List
[NOTE]
link:www.iosfonts.com[iOS Fonts] has a complete list of fonts for iOS, and shows their availability (i.e. iOS 4.3, 5.0, 6.0, etc...)

Family Name Array
-----------------
The first step to printing out the font family names available in the current version of iOS that you're working with, is to grab an array of all font families.

[source]
----
NSArray *familyNames = [C4Font familyNames];
----

Create Labels
-------------
All the names in the array are actually *NSString* objects, which means we can easily use them to create labels. A simple *for* loop will help us here.


A Shifting Origin
~~~~~~~~~~~~~~~~~
First, we create a *CGPoint* which we will use to set the origin for every label...

[source]
----
CGPoint point = CGPointMake(10, 10);
----

A Tricky for Loop
~~~~~~~~~~~~~~~~~
We create a loop that does a couple of things:

- gets the current font family name from an array
- creates a font using the current name
- creates a label using the current font and current name
- positions the origin of the label
- checks to see the y-position of the label is lower than the bottom of the screen, and adjusts if needed

[source]
----
for(NSString *familyName in familyNames) {
    C4Font *f = [C4Font fontWithName:familyName size:23.0f];
    C4Label *l = [C4Label labelWithText:familyName font:f];
    l.origin = point;
    point.y += l.height;
    if (point.y > self.canvas.height) point = CGPointMake(self.canvas.center.x+10, 10);
    [self.canvas addLabel:l];
}
----